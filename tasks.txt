По дизайну:
- подсвечение кнопок +
- подсветка строк — скруглить, в момент проигрыша — выделение +-
- time - не помню что
- минимизировать em/rem +
- searchbar, lk:
если margin %: 
justify-content: space-between 
по-хорошему нужно, чтобы один из них имел какую-то ширину +
- элементы, которые близко расположены, нужно в один контейнер +
- margin можно заменить на flex, align-items: center + justify-content: space-between
- style={} - только для динамических комнентов +
- можно избавиться от лишних z-indexов +
- .info: height 90(???) +
- css reset (либо через либу)
- inline — нехорошо +
- spacer — можно убрать, если сделать songlist на всю страницу: html:100%, body:min-height:100% - не получилось
- лишние дивы убрать +-
- paddingи в controls не нужны +
- отцентртровать плеер +
По коду: 
- по-хорошему только app должен быть в main.tsx +
- в root лучше без дизайна +
- svg=items в assetы, conts svgComponents не обязательны - так удобнее
- лучше для каждого компонента отдельную папочку со стилем + index.ts: export {Controls} from ./controls
-storybook —полезная штука
- переименовать LK (props не нужны) +
- унифицировать export default
- найти плагин для удаления ненужных importов
- можно тип стейта не указывать если есть значение
- handleProgress - onProgressProps (any лучше не использовать)
- hadlePlay() убрать, где не нужно
- prettier +
- дизайн для таблиц — в css
- dateTime — для точки во времени, использование в данном случае неккоректно
- страннное изменение value 
- проблема в durationbar была из-за того, что не указали width
- import react не везде нужен, кроме тех случаев, если пишу на jsx
 - можно было реализовать без react-player
- соблюдать стилистику написанмя кода
- 1)алгоритм БЭМ, 2)модули, 3) фреймворки (tailwind)
- докер, деплой



перевод на человеческий язык:

2. Добавить подсветку кнопок

3. Скруглить углы строк и выделять их при проигрывании.

4. Разработать более наглядное отображение времени (возможно, улучшить формат времени).

5. Минимизировать использование единиц измерения em и rem.

6. Если у вас есть элементы с использованием процентного отступа (margin %), рассмотрите возможность задать им фиксированную ширину или выровнять их по-другому.

7. Объединить элементы, которые близко расположены, в один контейнер, чтобы улучшить организацию макета.

8. Заменить использование margin на flex для управления расположением элементов, а также использовать `align-items: center` и `justify-content: space-between`.

9. Использовать атрибут `style={}` только для динамических компонентов, чтобы улучшить читаемость кода.

10. Убрать лишние значения `z-index`.

11. Проверить значение высоты элемента с классом `.info` (возможно, убедиться, что оно имеет разумное значение).

12. Применить CSS сброс стилей (CSS reset) для унификации отображения на разных браузерах.

13. Избегать использования инлайн-стилей (CSS inline) в HTML-коде.

14. Рассмотреть возможность убрать элемент "spacer", если сделать компонент "songlist" на всю высоту страницы с помощью правильных CSS свойств (`html: 100%, body: min-height: 100%`).

15. Убрать лишние `div` элементы.

16. Пересмотреть использование `padding` в компоненте "controls".

17. Центрировать плеер по отношению к родительскому контейнеру.
